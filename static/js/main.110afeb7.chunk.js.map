{"version":3,"sources":["serviceWorker.js","context/PrinciplesContext.js","context/PracticesContext.js","styles/global.js","styles/theme.js","components/Box.js","components/Button.js","components/Grid.js","components/GridItem.js","styles/headlines.js","components/H1.js","components/H2.js","components/H3.js","components/Link.js","components/Loading.js","components/PageLayout.js","components/Practices.js","components/Principles.js","components/Shield.js","components/Svg.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","PrinciplesContext","PracticesContext","React","createContext","Provider","PrinciplesProvider","Consumer","state","principles","data","this","react_default","a","createElement","value","props","children","Component","PracticesProvider","practices","PracticesContext_Provider","createGlobalStyle","_templateObject","normalize","RubikLatin300_2","RubikLatin300","RubikLatin400_2","RubikLatin400","RubikLatin500_2","RubikLatin500","baseTheme","breakpoints","space","fontSizes","fontWeights","radii","colors","black","white","blue","navy","link","beige","orange","shadows","medium","theme","Object","objectSpread","linkStyles","primary","color","&:hover","buttonSizes","small","fontSize","buttons","backgroundColor","rgba","borderColor","&:focus:not(:active)","boxShadow","concat","Box","styled","div","flexbox","layout","shadow","defaultProps","p","buttonSize","variant","prop","key","Button","appearance","cursor","borderWidth","borderStyle","outline","padding","borderRadius","buttonStyle","type","size","Grid","display","flexWrap","mt","ml","GridItem","pt","pl","headlineStyle","css","headlines_templateObject","H1","h1","typography","H2","h2","H3","h3","Link","href","Loading","components_Svg","xmlns","viewBox","width","height","fill","opacity","d","attributeName","from","to","dur","repeatCount","PageLayout","minWidth","maxWidth","py","px","mx","PrincipleShields","_ref","items","useContext","components_Grid","justifyContent","map","item","principle","find","propEq","id","components_GridItem","components_Shield","label","Practices","_useState","useState","_useState2","slicedToArray","extend","toggleExtend","not","length","components_H2","Fragment","alignItems","practice","title","why","how","more","links","hasAdditionalContent","components_Box","bg","flexDirection","components_H3","index","components_Link","url","description","components_Button","onClick","Principles","_React$useContext","loading","components_Loading","text","lineHeight","Div","position","Label","span","left","right","textAlign","system","fontWeight","property","scale","Shield","Math","floor","Svg","App","styled_components_browser_esm","components_PageLayout","global","components_H1","dist_default","mb","components_Principles","components_Practices","ReactDOM","render","PrinciplesContext_PrinciplesProvider","PracticesContext_PracticesProvider","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.110afeb7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport data from '../data/principles';\n\nlet PrinciplesContext;\nconst { Provider, Consumer } = (PrinciplesContext = React.createContext());\n\nclass PrinciplesProvider extends React.Component {\n  state = {\n    principles: data.principles,\n  };\n\n  render() {\n    const { principles } = this.state;\n\n    return (\n      <Provider\n        value={{\n          principles,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport {\n  PrinciplesProvider,\n  Consumer as PrinciplesConsumer,\n  PrinciplesContext,\n};\n","import React from 'react';\n\nimport data from '../data/practices';\n\nlet PracticesContext;\nconst { Provider, Consumer } = (PracticesContext = React.createContext());\n\nclass PracticesProvider extends React.Component {\n  state = {\n    practices: data.practices,\n  };\n\n  render() {\n    const { practices } = this.state;\n\n    return (\n      <Provider\n        value={{\n          practices,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { PracticesProvider, Consumer as PracticesConsumer, PracticesContext };\n","import { normalize } from 'styled-normalize';\nimport { createGlobalStyle } from 'styled-components';\n\nimport RubikLatin300 from 'typeface-rubik/files/rubik-latin-300.woff';\nimport RubikLatin300_2 from 'typeface-rubik/files/rubik-latin-300.woff';\nimport RubikLatin400 from 'typeface-rubik/files/rubik-latin-400.woff';\nimport RubikLatin400_2 from 'typeface-rubik/files/rubik-latin-400.woff';\nimport RubikLatin500 from 'typeface-rubik/files/rubik-latin-500.woff';\nimport RubikLatin500_2 from 'typeface-rubik/files/rubik-latin-500.woff';\n\nexport default createGlobalStyle`\n  ${normalize}\n  @font-face {\n    font-family: Rubik;\n    font-style: normal;\n    font-display: swap;\n    font-weight: 300;\n    src: url('${RubikLatin300_2}') format('woff2'), url('${RubikLatin300}') format('woff');\n  }\n  @font-face {\n    font-family: Rubik;\n    font-style: normal;\n    font-display: swap;\n    font-weight: 400;\n    src: url('${RubikLatin400_2}') format('woff2'), url('${RubikLatin400}') format('woff');\n  }\n  @font-face {\n    font-family: Rubik;\n    font-style: normal;\n    font-display: swap;\n    font-weight: 500;\n    src: url('${RubikLatin500_2}') format('woff2'), url('${RubikLatin500}') format('woff');\n  }\n  body {\n    font-family: Rubik, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n    padding: 0;\n    background-color: white;\n    line-height: 1.4;\n  }\n  html {\n    box-sizing: border-box;\n  }\n  p {\n    margin-top: 0;\n    margin-bottom: 0.5em;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n`;\n","import { rgba } from 'polished';\n\nconst baseTheme = {\n  breakpoints: ['30em', '48em', '64em'],\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [13, 14, 16, 18, 20, 24, 32, 48, 64, 72],\n  fontWeights: [300, 400, 500],\n  radii: [0, 3],\n  colors: {\n    black: '#000e1a',\n    white: '#fff',\n    blue: '#007ce0',\n    navy: '#004175',\n    link: '#1a0dab',\n    beige: '#FFEBCC',\n    orange: '#F2994A',\n  },\n  shadows: {\n    medium: '2px 2px 4px rgba(0, 0, 0, 0.2)',\n  },\n};\n\nconst theme = {\n  ...baseTheme,\n  linkStyles: {\n    primary: {\n      color: baseTheme.colors.link,\n      '&:hover': {\n        color: baseTheme.colors.black,\n      },\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: baseTheme.fontSizes[1],\n    },\n    medium: {\n      fontSize: baseTheme.fontSizes[2],\n    },\n  },\n  buttons: {\n    primary: {\n      color: baseTheme.colors.orange,\n      backgroundColor: rgba(baseTheme.colors.white, 0.2),\n      borderColor: baseTheme.colors.orange,\n      '&:hover': {\n        color: baseTheme.colors.white,\n        backgroundColor: baseTheme.colors.orange,\n      },\n      '&:focus:not(:active)': {\n        boxShadow: `0 0 0 3px ${rgba(baseTheme.colors.orange, 0.3)}`,\n      },\n    },\n  },\n};\n\nexport default theme;\n","import styled from 'styled-components';\nimport { flexbox, space, color, layout, shadow } from 'styled-system';\n\nconst Box = styled.div(flexbox, space, color, layout, shadow);\n\nBox.defaultProps = {\n  p: 3,\n};\n\nexport default Box;\n","import styled from 'styled-components';\n\nimport {\n  borderRadius,\n  boxShadow,\n  buttonStyle,\n  space,\n  fontSize,\n  variant,\n} from 'styled-system';\n\nconst buttonSize = variant({\n  prop: 'size',\n  key: 'buttonSizes',\n});\n\nconst Button = styled('button')(\n  {\n    appearance: 'none',\n    cursor: 'pointer',\n    borderWidth: '2px',\n    borderStyle: 'solid',\n    outline: 0,\n    padding: '.2em .5em',\n  },\n  borderRadius,\n  boxShadow,\n  buttonStyle,\n  buttonSize,\n  space,\n  fontSize,\n);\n\nButton.defaultProps = {\n  type: 'button',\n  borderRadius: 1,\n  variant: 'primary',\n  size: 'medium',\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { flexbox, space } from 'styled-system';\n\nconst Grid = styled.div(\n  {\n    display: 'flex',\n  },\n  flexbox,\n  space,\n);\n\nGrid.defaultProps = {\n  flexWrap: 'wrap',\n  mt: [-3],\n  ml: [-3],\n};\n\nexport default Grid;\n","import styled from 'styled-components';\nimport { space, layout } from 'styled-system';\n\nconst GridItem = styled.div(space, layout);\n\nGridItem.defaultProps = {\n  pt: [3],\n  pl: [3],\n};\n\nexport default GridItem;\n","import { css } from 'styled-components';\n\nconst headlineStyle = css`\n  font-weight: 500;\n  line-height: 1.25;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport default headlineStyle;\n","import styled from 'styled-components';\nimport { space, color, typography } from 'styled-system';\n\nimport headlineStyle from '../styles/headlines';\n\nconst H1 = styled.h1(headlineStyle, space, color, typography);\n\nH1.defaultProps = {\n  fontSize: 6,\n};\n\nexport default H1;\n","import styled from 'styled-components';\nimport { space, color, typography } from 'styled-system';\n\nimport headlineStyle from '../styles/headlines';\n\nconst H2 = styled.h2(headlineStyle, space, color, typography);\n\nH2.defaultProps = {\n  fontSize: 5,\n};\n\nexport default H2;\n","import styled from 'styled-components';\nimport { space, color, typography } from 'styled-system';\n\nimport headlineStyle from '../styles/headlines';\n\nconst H3 = styled.h3(headlineStyle, space, color, typography);\n\nH3.defaultProps = {\n  fontSize: 4,\n};\n\nexport default H3;\n","import styled from 'styled-components';\nimport { color, typography, variant } from 'styled-system';\n\nconst linkStyles = variant({\n  prop: 'type',\n  key: 'linkStyles',\n});\n\nconst Link = styled.a(color, typography, linkStyles);\n\nLink.defaultProps = {\n  href: '#',\n  type: 'primary',\n};\n\nexport default Link;\n","import React from 'react';\n\nimport { Svg } from './index';\n\nfunction Loading(props) {\n  return (\n    <Svg\n      color={props.color}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 32 32\"\n      width={props.size}\n      height={props.size}\n      fill=\"currentColor\"\n    >\n      <path\n        opacity=\".25\"\n        d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n      />\n\n      <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 16 16\"\n          to=\"360 16 16\"\n          dur=\"0.8s\"\n          repeatCount=\"indefinite\"\n        />\n      </path>\n    </Svg>\n  );\n}\n\nLoading.defaultProps = {\n  size: 16,\n};\n\nexport default Loading;\n","// import React from 'react';\nimport styled from 'styled-components';\nimport { space, color, layout } from 'styled-system';\n\nconst PageLayout = styled.div(\n  {\n    minWidth: 0,\n  },\n  space,\n  color,\n  layout,\n);\n\nPageLayout.defaultProps = {\n  maxWidth: [null, null, null, 1400],\n  py: [3],\n  px: [3],\n  mx: 'auto',\n};\n\nexport default PageLayout;\n","import React, { useState } from 'react';\nimport { not, find, propEq } from 'ramda';\n\nimport { PracticesContext } from '../context/PracticesContext';\nimport { PrinciplesContext } from '../context/PrinciplesContext';\n\nimport { Button, Shield, H2, H3, Box, Grid, GridItem, Link } from './index';\n\nfunction PrincipleShields({ items }) {\n  const { principles } = React.useContext(PrinciplesContext);\n\n  return (\n    <Grid justifyContent=\"flex-end\" mt={-1} ml={-1}>\n      {items.map((item) => {\n        const principle = find(propEq('id', item))(principles);\n        const { id, color } = principle;\n\n        return (\n          <GridItem key={id} pt={1} pl={1}>\n            <Shield label={id} color={color} />\n          </GridItem>\n        );\n      })}\n    </Grid>\n  );\n}\n\nfunction Practices() {\n  const [extend, toggleExtend] = useState(false);\n  const { practices } = React.useContext(PracticesContext);\n\n  if (not(practices.length)) {\n    return <H2>Quick, come up with some practices!</H2>;\n  }\n\n  return (\n    <>\n      <Grid alignItems=\"stretch\">\n        {practices.map((practice) => {\n          const { id, title, why, how, more, links, principles } = practice;\n\n          const hasAdditionalContent = more || links;\n\n          return (\n            <GridItem key={id} width={[1, 1 / 2, 1 / 3]}>\n              <Box\n                bg=\"beige\"\n                boxShadow=\"medium\"\n                height=\"100%\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"space-between\"\n              >\n                <div>\n                  {title && <H3>{title}</H3>}\n\n                  {why && (\n                    <p>\n                      <strong>Why:</strong> {why}\n                    </p>\n                  )}\n\n                  {how && (\n                    <p>\n                      <strong>How:</strong> {how}\n                    </p>\n                  )}\n\n                  {hasAdditionalContent && (\n                    <>\n                      {extend && more && <p>{more}</p>}\n                      {extend &&\n                        links &&\n                        links.map((link, index) => {\n                          return (\n                            <p key={index}>\n                              <Link href={link.url}>{link.description}</Link>\n                            </p>\n                          );\n                        })}\n\n                      <Button\n                        onClick={() => {\n                          toggleExtend(!extend);\n                        }}\n                        size=\"small\"\n                      >\n                        {extend ? 'Show less' : 'Show more'}\n                      </Button>\n                    </>\n                  )}\n                </div>\n\n                {principles.length > 0 && (\n                  <PrincipleShields items={principles} />\n                )}\n              </Box>\n            </GridItem>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n\nexport default Practices;\n","import React from 'react';\nimport { not } from 'ramda';\n\nimport { PrinciplesContext } from '../context/PrinciplesContext';\nimport { Loading, H2, H3, Box, Grid, GridItem } from '../components';\n\nfunction Principles() {\n  const { principles, loading } = React.useContext(PrinciplesContext);\n\n  if (loading) {\n    return <Loading size={24} />;\n  }\n\n  if (not(principles.length)) {\n    return <H2>Help, we have no principles!</H2>;\n  }\n\n  return (\n    <>\n      <Grid alignItems=\"stretch\">\n        {principles.map((principle) => {\n          const { id, text, color } = principle;\n\n          return (\n            <GridItem key={id} width={[1, 1 / 2, 1 / 3, 1 / 4]}>\n              <Box bg={color} color=\"white\" height=\"100%\" boxShadow=\"medium\">\n                <Grid>\n                  <GridItem width={1 / 4}>\n                    <H3 fontSize={8} lineHeight={1}>\n                      {id}\n                    </H3>\n                  </GridItem>\n                  {text && (\n                    <GridItem width={3 / 4}>\n                      <p>{text}</p>\n                    </GridItem>\n                  )}\n                </Grid>\n              </Box>\n            </GridItem>\n          );\n        })}\n      </Grid>\n    </>\n  );\n}\n\nexport default Principles;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color, typography, space, layout, system } from 'styled-system';\n\nimport { Svg } from './index';\n\nconst Div = styled.div(\n  {\n    position: 'relative',\n  },\n  layout,\n);\n\nconst Label = styled.span(\n  {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    display: 'block',\n    textAlign: 'center',\n  },\n  system({\n    fontWeight: {\n      property: 'fontWeight',\n      scale: 'fontWeights',\n    },\n  }),\n  color,\n  space,\n  typography,\n);\n\nfunction Shield({ label, color, size }) {\n  const width = size;\n  const height = Math.floor((30 / 25) * size);\n\n  const fontSize = Math.floor((16 / 25) * size);\n\n  return (\n    <Div height={height}>\n      {label && (\n        <Label fontSize={fontSize} fontWeight={2} color=\"white\" p={1}>\n          {label}\n        </Label>\n      )}\n      <Svg\n        color={color}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 25 30\"\n        width={width}\n        height={height}\n        fill=\"currentColor\"\n      >\n        <path d=\"M0 16.4285V0H25V16.4285C25 25.1786 12.3239 30 12.3239 30C12.3239 30 0 24.4643 0 16.4285Z\" />\n      </Svg>\n    </Div>\n  );\n}\n\nShield.defaultProps = {\n  size: 25,\n};\n\nexport default Shield;\n","import styled from 'styled-components';\nimport { space, fontSize, width, color } from 'styled-system';\n\nconst Svg = styled('svg')(space, fontSize, width, color);\n\nSvg.defaultProps = {\n  fill: 'currentColor',\n  viewBox: '0 0 32 32',\n  height: 32,\n  width: 32,\n};\n\nexport default Svg;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Space from '@rebass/space';\n\nimport GlobalStyle from './styles/global';\nimport theme from './styles/theme';\nimport { PageLayout, Principles, Practices, H1 } from './components/index';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <PageLayout>\n        <GlobalStyle />\n\n        <H1>Agile practice cards</H1>\n\n        <Space mb={5}>\n          <div>\n            <Principles />\n          </div>\n\n          <div>\n            <Practices />\n          </div>\n        </Space>\n      </PageLayout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { PrinciplesProvider } from './context/PrinciplesContext';\nimport { PracticesProvider } from './context/PracticesContext';\n\nimport App from './App';\n\nReactDOM.render(\n  <PrinciplesProvider>\n    <PracticesProvider>\n      <App />\n    </PracticesProvider>\n  </PrinciplesProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}